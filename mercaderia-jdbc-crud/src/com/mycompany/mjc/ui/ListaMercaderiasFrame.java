/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.mjc.ui;

import com.mycompany.mjc.dao.MercaderiaDAO;
import com.mycompany.mjc.dao.MercaderiaDAOJDBC;
import com.mycompany.mjc.exception.PersistenceException;
import com.mycompany.mjc.model.Mercaderia;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.DefaultListSelectionModel;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josediaz
 */
public class ListaMercaderiasFrame extends javax.swing.JFrame {

    private DefaultTableModel tableModel;
    private IncluirMercaderiaFrame incluirFrame;
    private EditarMercaderiaFrame editarFrame;
    private BuscaMercaderiaFrame buscarFrame;
    private SobreFrame sobreFrame;

    /**
     * Creates new form ListaMercaderiasFrame
     */
    public ListaMercaderiasFrame() {
        initComponents();


        tblMercaderia.setSelectionMode(DefaultListSelectionModel.SINGLE_SELECTION);
        tableModel = (DefaultTableModel) tblMercaderia.getModel();
        tblMercaderia.addMouseListener(new EditarMercaderiaListener());
        incluirFrame = new IncluirMercaderiaFrame(this);
        editarFrame = new EditarMercaderiaFrame(this);
        buscarFrame = new BuscaMercaderiaFrame(this);
        sobreFrame = new SobreFrame();
		
        menuF1.addActionListener(new SobreMenuListener());
        acercaDe.addActionListener(new SobreMenuListener());

        inicializaDB();



        pack();
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(true);
    }

    private class SobreMenuListener extends AbstractAction implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            sobreFrame.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnNuevaMercaderia = new javax.swing.JButton();
        btnBuscarMercaderia = new javax.swing.JButton();
        btnActualizarMercaderia = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMercaderia = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        menuF1 = new javax.swing.JMenu();
        acercaDe = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnNuevaMercaderia.setText("Nuevo");
        btnNuevaMercaderia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaMercaderiaActionPerformed(evt);
            }
        });

        btnBuscarMercaderia.setText("Buscar");
        btnBuscarMercaderia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarMercaderiaActionPerformed(evt);
            }
        });

        btnActualizarMercaderia.setText("Actualizar");
        btnActualizarMercaderia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarMercaderiaActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .add(btnNuevaMercaderia)
                .add(18, 18, 18)
                .add(btnBuscarMercaderia)
                .add(18, 18, 18)
                .add(btnActualizarMercaderia)
                .add(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(btnNuevaMercaderia)
                    .add(btnBuscarMercaderia)
                    .add(btnActualizarMercaderia))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        tblMercaderia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Descripcion", "Precio", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblMercaderia);

        menuF1.setText("Ayuda");

        acercaDe.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        acercaDe.setText("Acerca de");
        menuF1.add(acercaDe);

        menuBar.add(menuF1);

        setJMenuBar(menuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaMercaderiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaMercaderiaActionPerformed
        incluirFrame.setVisible(true);
    }//GEN-LAST:event_btnNuevaMercaderiaActionPerformed

    private void btnActualizarMercaderiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarMercaderiaActionPerformed
        SwingUtilities.invokeLater(newActualizaMercaderiasAction());        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarMercaderiaActionPerformed

    private void btnBuscarMercaderiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarMercaderiaActionPerformed
        buscarFrame.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMercaderiaActionPerformed

    private class EditarMercaderiaListener extends MouseAdapter {

        public void mouseClicked(MouseEvent event) {
            if (event.getClickCount() == 2) {
                int filaSeleccionada = tblMercaderia.getSelectedRow();
                if (filaSeleccionada != -1) {
                    MercaderiaDAO dao = new MercaderiaDAOJDBC();
                    String id = tableModel.getValueAt(filaSeleccionada, 0).toString();
                    Mercaderia m = dao.findById(Integer.valueOf(id));
                    if (m != null) {
                        editarFrame.setMercaderia(m);
                        editarFrame.setVisible(true);
                    }
                }

            }
        }
    }

    public Runnable newActualizaMercaderiasAction() {
        return new Runnable() {
            public void run() {
                try {
                    MercaderiaDAO dao = new MercaderiaDAOJDBC();

                    mostrarMercaderias(dao.getAll());
                } catch (PersistenceException ex) {
                    JOptionPane.showMessageDialog(ListaMercaderiasFrame.this,
                            ex.getMessage(), "Error al consultar Mercaderia(s)", JOptionPane.ERROR_MESSAGE);
                }
            }
        };
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem acercaDe;
    private javax.swing.JButton btnActualizarMercaderia;
    private javax.swing.JButton btnBuscarMercaderia;
    private javax.swing.JButton btnNuevaMercaderia;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuF1;
    private javax.swing.JTable tblMercaderia;
    // End of variables declaration//GEN-END:variables

    private void inicializaDB() {

        try {
            new MercaderiaDAOJDBC().init();
            SwingUtilities.invokeLater(newActualizaMercaderiasAction());
        } catch (PersistenceException ex) {
            JOptionPane.showMessageDialog(this, "No fue posible inicializar la base de datos: "
                    + ex.getMessage() + "\nVerifique los datos de conexion y configuracion de la base de datos!", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }

    public void mostrarMercaderias(List<Mercaderia> mercaderias) {
        tableModel.setRowCount(mercaderias.size());
        for (int i = 0; i < mercaderias.size(); i++) {
            Mercaderia mercaderia = mercaderias.get(i);
            tableModel.setValueAt(mercaderia.getId(), i, 0);
            tableModel.setValueAt(mercaderia.getNombre(), i, 1);
            tableModel.setValueAt(mercaderia.getDescripcion(), i, 2);
            tableModel.setValueAt(mercaderia.getPrecio(), i, 3);
            tableModel.setValueAt(mercaderia.getCantidad(), i, 4);
        }
    }
}
