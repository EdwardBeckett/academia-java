/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.mjc.ui;

import com.mycompany.mjc.dao.MercaderiaDAO;
import com.mycompany.mjc.dao.MercaderiaDAOJDBC;
import com.mycompany.mjc.model.Mercaderia;
import java.text.ParseException;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author josediaz
 */
public class IncluirMercaderiaFrame extends javax.swing.JFrame {

    private ListaMercaderiasFrame framePrincipal;

    public IncluirMercaderiaFrame(ListaMercaderiasFrame framePrincipal) {
        this.framePrincipal = framePrincipal;
        setTitle("Incluir Mercaderia");
        //setSize(300,250);
        setLocationRelativeTo(null);
        setResizable(false);
        initComponents();
        btnEliminar.setEnabled(false);
        resetForm();
    }

    private void resetForm() {
        txtId.setValue(null);
        txtNombre.setText("");
        txtDescripcion.setText("");
        txtPrecio.setText("");
        txtCantidad.setValue(new Integer(1));
    }

    protected Integer getIdMercaderia() {
        try {
            return Integer.parseInt(txtId.getText());
        } catch (Exception nex) {
            return null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JFormattedTextField();
        lblDescripcion = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnGrabar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtId = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblNombre.setText("Nombre");

        lblCantidad.setText("Cantidad");

        lblDescripcion.setText("Descripcion");

        jLabel1.setText("Precio");

        jLabel2.setText("Id");

        btnGrabar.setText("Grabar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtId.setEditable(false);
        txtId.setEnabled(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(31, 31, 31)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(btnGrabar)
                        .add(12, 12, 12)
                        .add(btnEliminar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnCancelar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblNombre)
                            .add(lblCantidad)
                            .add(lblDescripcion)
                            .add(jLabel1)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtPrecio)
                            .add(txtDescripcion)
                            .add(txtCantidad)
                            .add(txtNombre)
                            .add(txtId))
                        .add(25, 25, 25))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblNombre)
                    .add(txtNombre, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblCantidad)
                    .add(txtCantidad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblDescripcion)
                    .add(txtDescripcion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtPrecio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(txtId, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnGrabar)
                    .add(btnEliminar)
                    .add(btnCancelar))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed

        try {
            Mercaderia m = loadMercaderiaFromPanel();
            MercaderiaDAO dao = new MercaderiaDAOJDBC();
            dao.save(m);

            setVisible(false);
            resetForm();
            SwingUtilities.invokeLater(framePrincipal.newActualizaMercaderiasAction());

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(IncluirMercaderiaFrame.this,
                    ex.getMessage(), "Error al incluir Mercaderia", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        setVisible(false);
        resetForm();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Integer id = getIdMercaderia();
        if (id != null) {
            try {
                MercaderiaDAO dao = new MercaderiaDAOJDBC();
                Mercaderia m = dao.findById(id);
                if (m != null) {
                    dao.remove(m);
                }

                setVisible(false);
                resetForm();
                SwingUtilities.invokeLater(framePrincipal.newActualizaMercaderiasAction());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(IncluirMercaderiaFrame.this,
                        ex.getMessage(), "Error al eliminar Mercaderia", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    protected javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JFormattedTextField txtCantidad;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JFormattedTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    protected Mercaderia loadMercaderiaFromPanel() {

        String msg = validador();

        if (!msg.isEmpty()) {
            throw new RuntimeException("Error en campo(s): " + msg);
        }

        String nombre = txtNombre.getText().trim();
        String descripcion = txtDescripcion.getText().trim();

        if (nombre.length() < 5) {
            throw new RuntimeException("El nombre no debe ser menor a 5 caracteres!");
        }

        Integer cantidad = null;
        try {
            cantidad = Integer.valueOf(txtCantidad.getText());
        } catch (NumberFormatException nex) {
            throw new RuntimeException("Error en la conversion del campo cantidad (Integer).\nContenido inválido!");
        }
        if (cantidad < 1) {
            throw new RuntimeException("El valor minimo de cantidad debe ser 1!");
        }

        Double precio = null;
        try {
            precio = Mercaderia.formatStringToPrecio(txtPrecio.getText());
        } catch (ParseException nex) {
            throw new RuntimeException("Error en la conversion del campo precio (Double).\nContenido inválido!");
        }
        if (precio < 1) {
            throw new RuntimeException("El valor minimo debe ser 1!");
        }

        return new Mercaderia(null, nombre, descripcion, cantidad, precio);
    }

    private String validador() {
        StringBuilder sb = new StringBuilder();
        sb.append(txtNombre.getText() == null || "".equals(txtNombre.getText().trim()) ? "Nombre, " : "");
        sb.append(txtPrecio.getText() == null || "".equals(txtPrecio.getText().trim()) ? "Precio, " : "");
        sb.append(txtCantidad.getText() == null || "".equals(txtCantidad.getText().trim()) ? "Cantidad, " : "");

        if (!sb.toString().isEmpty()) {
            sb.delete(sb.toString().length() - 2, sb.toString().length());
        }
        return sb.toString();
    }

    public void setMercaderia(Mercaderia m) {
        resetForm();
        if (m != null) {
            populaTextFields(m);
        }
    }

    private void populaTextFields(Mercaderia m) {
        txtId.setValue(m.getId());
        txtNombre.setText(m.getNombre());
        txtDescripcion.setText(m.getDescripcion());
        txtCantidad.setValue(m.getCantidad());
        txtPrecio.setText(Mercaderia.convertPrecioToString(m.getPrecio()));
    }
}
